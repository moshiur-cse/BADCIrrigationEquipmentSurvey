// <auto-generated />
using System;
using BADCIrrigationEquipmentSurvey.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BADCIrrigationEquipmentSurvey.DbContexts.Migrations.BadcDb
{
    [DbContext(typeof(BadcDbContext))]
    partial class BadcDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.AgencyInfo", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameOfAgency")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Code");

                    b.ToTable("LookUpAgencies");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.CropInfo", b =>
                {
                    b.Property<int>("CropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CropId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CropName")
                        .IsRequired()
                        .HasColumnName("CropName")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("SeasonId")
                        .HasColumnName("SeasonId")
                        .HasColumnType("int");

                    b.HasKey("CropId");

                    b.HasIndex("SeasonId");

                    b.ToTable("LookUpCropInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.DistrictInfo", b =>
                {
                    b.Property<string>("DistCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("DistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("DivCode")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("DistCode");

                    b.HasIndex("DivCode");

                    b.ToTable("LookUpDistricts");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.DivisionInfo", b =>
                {
                    b.Property<string>("DivCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("DivName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("DivCode");

                    b.ToTable("LookUpDivisions");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.EquipmentInfo", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EquipmentId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnName("EquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("NameOfEquipment")
                        .IsRequired()
                        .HasColumnName("NameOfEquipment")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("EquipmentId");

                    b.HasIndex("EquipmentTypeId");

                    b.ToTable("LookUpEquipmentInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.EquipmentTypeInfo", b =>
                {
                    b.Property<int>("EquipmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EquipmentTypeId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EquipmentType")
                        .IsRequired()
                        .HasColumnName("EquipmentType")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("EquipmentTypeId");

                    b.ToTable("LookUpEquipmentTypeInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.Kharif1SurveyInfo", b =>
                {
                    b.Property<int>("SurveyKharif1Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SurveyKharif1Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AusArea")
                        .HasColumnName("AusArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("AusCost")
                        .HasColumnName("AusCost")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("BenefitedAgricultureLabourFemale")
                        .HasColumnName("BenefitedAgricultureLabourFemale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedAgricultureLabourMale")
                        .HasColumnName("BenefitedAgricultureLabourMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedFarmerFemale")
                        .HasColumnName("BenefitedFarmerFemale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedFarmerMale")
                        .HasColumnName("BenefitedFarmerMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("JuteArea")
                        .HasColumnName("JuteArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("JuteCost")
                        .HasColumnName("JuteCost")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("OthersArea")
                        .HasColumnName("OthersArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("OthersCost")
                        .HasColumnName("OthersCost")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int?>("SurveyId");

                    b.Property<decimal?>("TotalOperatingHour")
                        .HasColumnName("TotalOperatingHour")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<bool>("UseInKharif2Season")
                        .HasColumnName("UseInKharif2Season")
                        .HasColumnType("bit");

                    b.Property<decimal?>("VegArea")
                        .HasColumnName("VegArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("VegCost")
                        .HasColumnName("VegCost")
                        .HasColumnType("decimal(12, 2)");

                    b.HasKey("SurveyKharif1Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("TblKharif1SurveyInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.Kharif2SurveyInfo", b =>
                {
                    b.Property<int>("SurveyKharif1Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SurveyKharif2Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BenefitedAgricultureLabourFemale")
                        .HasColumnName("BenefitedAgricultureLabourFemale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedAgricultureLabourMale")
                        .HasColumnName("BenefitedAgricultureLabourMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedFarmerFemale")
                        .HasColumnName("BenefitedFarmerFemale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedFarmerMale")
                        .HasColumnName("BenefitedFarmerMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("OthersArea")
                        .HasColumnName("OthersArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("OthersCost")
                        .HasColumnName("OthersCost")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int?>("SurveyId");

                    b.Property<decimal?>("TAmanArea")
                        .HasColumnName("TAmanArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("TAmanCost")
                        .HasColumnName("TAmanCost")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("TotalOperatingHour")
                        .HasColumnName("TotalOperatingHour")
                        .HasColumnType("decimal(10, 0)");

                    b.HasKey("SurveyKharif1Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("TblKharif2SurveyInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.MauzaInfo", b =>
                {
                    b.Property<string>("MauzaCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("DistCode")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("MauzaJlNo")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("MauzaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("UnionCode")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("UpazCode")
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6);

                    b.HasKey("MauzaCode");

                    b.HasIndex("DistCode");

                    b.HasIndex("UnionCode");

                    b.HasIndex("UpazCode");

                    b.ToTable("LookUpMauzas");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.MotorPowerSourceInfo", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ElectricMotorSourceOfPower")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Code");

                    b.ToTable("LookUpMotorPowerSources");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.OtherSurveyDrugWellInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgencyCode")
                        .HasColumnName("AgencyCode")
                        .HasColumnType("int");

                    b.Property<string>("JlNo")
                        .HasColumnName("JlNo")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MauzaName")
                        .HasColumnName("MauzaName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("NameOfScheme")
                        .HasColumnName("NameOfScheme")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("OtherSurveyId")
                        .HasColumnName("OtherSurveyId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerOrManagerMobileNo")
                        .HasColumnName("OwnerOrManagerMobileNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("OwnerOrManagerName")
                        .HasColumnName("OwnerOrManagerName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("PlotNo")
                        .HasColumnName("PlotNo")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("UnionCode")
                        .HasColumnName("UnionCode")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.HasIndex("AgencyCode");

                    b.HasIndex("OtherSurveyId");

                    b.HasIndex("UnionCode");

                    b.ToTable("TblOtherSurveyDrugWellInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.OtherSurveyInfo", b =>
                {
                    b.Property<int>("OtherSurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OtherSurveyId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DistCode")
                        .IsRequired()
                        .HasColumnName("DistCode")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4);

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnName("EntryDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EntryUserId")
                        .HasColumnName("EntryUserId")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("EquipmentId")
                        .HasColumnName("EquipmentId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Kharif1AusArea")
                        .HasColumnName("Kharif1AusArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Kharif1BenefitedAgricultureLabourFemale")
                        .HasColumnName("Kharif1BenefitedAgricultureLabourFemale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("Kharif1BenefitedAgricultureLabourMale")
                        .HasColumnName("Kharif1BenefitedAgricultureLabourMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("Kharif1BenefitedFarmerFemale")
                        .HasColumnName("Kharif1BenefitedFarmerFemale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("Kharif1BenefitedFarmerMale")
                        .HasColumnName("Kharif1BenefitedFarmerMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("Kharif1JuteArea")
                        .HasColumnName("Kharif1JuteArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Kharif1OthersArea")
                        .HasColumnName("Kharif1OthersArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Kharif1VegSummerArea")
                        .HasColumnName("Kharif1VegSummerArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Kharif2BenefitedAgricultureLabourFemale")
                        .HasColumnName("Kharif2BenefitedAgricultureLabourFemale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("Kharif2BenefitedAgricultureLabourMale")
                        .HasColumnName("Kharif2BenefitedAgricultureLabourMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("Kharif2BenefitedFarmerFemale")
                        .HasColumnName("Kharif2BenefitedFarmerFemale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("Kharif2BenefitedFarmerMale")
                        .HasColumnName("Kharif2BenefitedFarmerMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("Kharif2OthersArea")
                        .HasColumnName("Kharif2OthersArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Kharif2TAmanArea")
                        .HasColumnName("Kharif2TAmanArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("NoOfEquipmentWellScheme")
                        .HasColumnName("NoOfEquipmentWellScheme")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("RobiBenefitedAgricultureLabourMale")
                        .HasColumnName("RobiBenefitedAgricultureLabourMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("RobiBenefitedFarmerMale")
                        .HasColumnName("RobiBenefitedFarmerMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("RobiBoroArea")
                        .HasColumnName("RobiBoroArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("RobiMaizeArea")
                        .HasColumnName("RobiMaizeArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("RobiMustardArea")
                        .HasColumnName("RobiMustardArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("RobiOthersArea")
                        .HasColumnName("RobiOthersArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("RobiPotatoArea")
                        .HasColumnName("RobiPotatoArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("RobiVegWinterArea")
                        .HasColumnName("RobiVegWinterArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("RobiWheatArea")
                        .HasColumnName("RobiWheatArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("SurveyDate")
                        .HasColumnName("SurveyDate")
                        .HasColumnType("date");

                    b.Property<string>("UpazCode")
                        .IsRequired()
                        .HasColumnName("UpazCode")
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6);

                    b.HasKey("OtherSurveyId");

                    b.HasIndex("DistCode");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("UpazCode");

                    b.ToTable("TblOtherSurveyInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.SeasonInfo", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SeasonId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SeasonName")
                        .IsRequired()
                        .HasColumnName("SeasonName")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("SeasonId");

                    b.ToTable("LookUpSeasonInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.SurfaceWaterSourceInfo", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SourceOfSurfaceWater")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Code");

                    b.ToTable("LookUpSurfaceWaterSources");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.SurveyInfo", b =>
                {
                    b.Property<int>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SurveyId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgencyCode")
                        .HasColumnName("AgencyCode")
                        .HasColumnType("int");

                    b.Property<decimal?>("AusAreaKh1")
                        .HasColumnName("AusAreaKh1")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("AusCostKh1")
                        .HasColumnName("AusCostKh1")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("BenefitedAgricultureLabourFemale")
                        .HasColumnName("BenefitedAgricultureLabourFemale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedAgricultureLabourFemaleKh1")
                        .HasColumnName("BenefitedAgricultureLabourFemaleKh1")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedAgricultureLabourFemaleKh2")
                        .HasColumnName("BenefitedAgricultureLabourFemaleKh2")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedAgricultureLabourMale")
                        .HasColumnName("BenefitedAgricultureLabourMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedAgricultureLabourMaleKh1")
                        .HasColumnName("BenefitedAgricultureLabourMaleKh1")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedAgricultureLabourMaleKh2")
                        .HasColumnName("BenefitedAgricultureLabourMaleKh2")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedFarmerFemale")
                        .HasColumnName("BenefitedFarmerFemale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedFarmerFemaleKh1")
                        .HasColumnName("BenefitedFarmerFemaleKh1")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedFarmerFemaleKh2")
                        .HasColumnName("BenefitedFarmerFemaleKh2")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedFarmerMale")
                        .HasColumnName("BenefitedFarmerMale")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedFarmerMaleKh1")
                        .HasColumnName("BenefitedFarmerMaleKh1")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BenefitedFarmerMaleKh2")
                        .HasColumnName("BenefitedFarmerMaleKh2")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("BoroArea")
                        .HasColumnName("BoroArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("BoroCost")
                        .HasColumnName("BoroCost")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("CanalLengthBuriedPipe")
                        .HasColumnName("CanalLengthBuriedPipe")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("CanalLengthFitaPipe")
                        .HasColumnName("CanalLengthFitaPipe")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("CanalLengthKacha")
                        .HasColumnName("CanalLengthKacha")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("CanalLengthPacca")
                        .HasColumnName("CanalLengthPacca")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("DieselEngineHp")
                        .HasColumnName("DieselEngineHp")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("DieselEngineMakeAndModel")
                        .HasColumnName("DieselEngineMakeAndModel")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DistCode")
                        .IsRequired()
                        .HasColumnName("DistCode")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4);

                    b.Property<decimal?>("ElectricMotorKw")
                        .HasColumnName("ElectricMotorKw")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ElectricMotorMakeAndModel")
                        .HasColumnName("ElectricMotorMakeAndModel")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("EmPowerSourceCode")
                        .HasColumnName("EmPowerSourceCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnName("EntryDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EntryUserId")
                        .HasColumnName("EntryUserId")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("EquipmentId")
                        .HasColumnName("EquipmentId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsServiceable")
                        .HasColumnName("IsServiceable")
                        .HasColumnType("bit");

                    b.Property<string>("JlNo")
                        .HasColumnName("JlNo")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<decimal?>("JuteAreaKh1")
                        .HasColumnName("JuteAreaKh1")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("JuteCostKh1")
                        .HasColumnName("JuteCostKh1")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("MaizeArea")
                        .HasColumnName("MaizeArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("MaizeCost")
                        .HasColumnName("MaizeCost")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("MauzaName")
                        .HasColumnName("MauzaName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("MustardArea")
                        .HasColumnName("MustardArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("NameOfScheme")
                        .HasColumnName("NameOfScheme")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("OthersArea")
                        .HasColumnName("OthersArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("OthersAreaKh1")
                        .HasColumnName("OthersAreaKh1")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("OthersAreaKh2")
                        .HasColumnName("OthersAreaKh2")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("OthersCost")
                        .HasColumnName("OthersCost")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("OthersCostKh1")
                        .HasColumnName("OthersCostKh1")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("OthersCostKh2")
                        .HasColumnName("OthersCostKh2")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("OwnerOrManagerMobileNo")
                        .HasColumnName("OwnerOrManagerMobileNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("OwnerOrManagerName")
                        .HasColumnName("OwnerOrManagerName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("PlotNo")
                        .HasColumnName("PlotNo")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<decimal?>("PotatoArea")
                        .HasColumnName("PotatoArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("PotatoCost")
                        .HasColumnName("PotatoCost")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("PumpCapacityInCusec")
                        .HasColumnName("PumpCapacityInCusec")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("SmartCard")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("SurveyDate")
                        .HasColumnName("SurveyDate")
                        .HasColumnType("date");

                    b.Property<int?>("SwSourceCode")
                        .HasColumnName("SwSourceCode")
                        .HasColumnType("int");

                    b.Property<decimal?>("TAmanAreaKh2")
                        .HasColumnName("TAmanAreaKh2")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("TAmanCostKh2")
                        .HasColumnName("TAmanCostKh2")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("TotalOperatingHour")
                        .HasColumnName("TotalOperatingHour")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("TotalOperatingHourKh1")
                        .HasColumnName("TotalOperatingHourKh1")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<decimal?>("TotalOperatingHourKh2")
                        .HasColumnName("TotalOperatingHourKh2")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<string>("UnionCode")
                        .HasColumnName("UnionCode")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("UpazCode")
                        .IsRequired()
                        .HasColumnName("UpazCode")
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6);

                    b.Property<bool>("UseInKharif1Season")
                        .HasColumnName("UseInKharif1Season")
                        .HasColumnType("bit");

                    b.Property<bool>("UseInKharif2Season")
                        .HasColumnName("UseInKharif2Season")
                        .HasColumnType("bit");

                    b.Property<decimal?>("VegAreaKh1")
                        .HasColumnName("VegAreaKh1")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("VegCostKh1")
                        .HasColumnName("VegCostKh1")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("VegWinterArea")
                        .HasColumnName("VegWinterArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("VegWinterCost")
                        .HasColumnName("VegWinterCost")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal?>("WheatArea")
                        .HasColumnName("WheatArea")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("WheatCost")
                        .HasColumnName("WheatCost")
                        .HasColumnType("decimal(12, 2)");

                    b.HasKey("SurveyId");

                    b.HasIndex("AgencyCode");

                    b.HasIndex("DistCode");

                    b.HasIndex("EmPowerSourceCode");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("SwSourceCode");

                    b.HasIndex("UnionCode");

                    b.HasIndex("UpazCode");

                    b.ToTable("TblSurveyInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.UnionInfo", b =>
                {
                    b.Property<string>("UnionCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("DistCode")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("UnionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("UpazCode")
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6);

                    b.HasKey("UnionCode");

                    b.HasIndex("DistCode");

                    b.HasIndex("UpazCode");

                    b.ToTable("LookUpUnions");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.UpazilaInfo", b =>
                {
                    b.Property<string>("UpazCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("DistCode")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("UpazName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("UpazCode");

                    b.HasIndex("DistCode");

                    b.ToTable("LookUpUpazilas");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.ViewModels.ViewCategoryInfo", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnName("Category")
                        .HasColumnType("varchar(200)");

                    b.HasKey("CategoryId");

                    b.ToTable("LookUpViewCategoryInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.ViewModels.ViewSubCategoryInfo", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubCategoryId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SubCategory")
                        .HasColumnName("SubCategory")
                        .HasColumnType("varchar(200)");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("LookUpViewSubCategoryInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.ViewModels.ViewSubSubCategoryInfo", b =>
                {
                    b.Property<int>("SubSubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubSubCategoryId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SubCategoryId")
                        .HasColumnName("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SubSubCategory")
                        .HasColumnName("SubSubCategory")
                        .HasColumnType("varchar(200)");

                    b.HasKey("SubSubCategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("LookUpViewSubSubCategoryInfoes");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.CropInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.SeasonInfo", "SeasonInfo")
                        .WithMany()
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.DistrictInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.DivisionInfo", "DivisionInfo")
                        .WithMany("DistrictList")
                        .HasForeignKey("DivCode");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.EquipmentInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.EquipmentTypeInfo", "EquipmentTypeInfo")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.Kharif1SurveyInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.SurveyInfo", "SurveyInfo")
                        .WithMany()
                        .HasForeignKey("SurveyId");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.Kharif2SurveyInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.SurveyInfo", "SurveyInfo")
                        .WithMany()
                        .HasForeignKey("SurveyId");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.MauzaInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.DistrictInfo", "DistrictInfo")
                        .WithMany("MauzaList")
                        .HasForeignKey("DistCode");

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.UnionInfo", "UnionInfo")
                        .WithMany("MauzaList")
                        .HasForeignKey("UnionCode");

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.UpazilaInfo", "UpazilaInfo")
                        .WithMany("MauzaList")
                        .HasForeignKey("UpazCode");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.OtherSurveyDrugWellInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.AgencyInfo", "AgencyInfo")
                        .WithMany()
                        .HasForeignKey("AgencyCode");

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.OtherSurveyInfo", "OtherSurveyInfo")
                        .WithMany()
                        .HasForeignKey("OtherSurveyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.UnionInfo", "UnionInfo")
                        .WithMany()
                        .HasForeignKey("UnionCode");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.OtherSurveyInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.DistrictInfo", "DistrictInfo")
                        .WithMany()
                        .HasForeignKey("DistCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.EquipmentInfo", "EquipmentInfo")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.UpazilaInfo", "UpazilaInfo")
                        .WithMany()
                        .HasForeignKey("UpazCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.SurveyInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.AgencyInfo", "AgencyInfo")
                        .WithMany()
                        .HasForeignKey("AgencyCode");

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.DistrictInfo", "DistrictInfo")
                        .WithMany()
                        .HasForeignKey("DistCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.MotorPowerSourceInfo", "ElectricMotorPowerSourceInfo")
                        .WithMany()
                        .HasForeignKey("EmPowerSourceCode");

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.EquipmentInfo", "EquipmentInfo")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.SurfaceWaterSourceInfo", "SurfaceWaterSourceInfo")
                        .WithMany()
                        .HasForeignKey("SwSourceCode");

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.UnionInfo", "UnionInfo")
                        .WithMany()
                        .HasForeignKey("UnionCode");

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.UpazilaInfo", "UpazilaInfo")
                        .WithMany()
                        .HasForeignKey("UpazCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.UnionInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.DistrictInfo", "DistrictInfo")
                        .WithMany("UnionList")
                        .HasForeignKey("DistCode");

                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.UpazilaInfo", "UpazilaInfo")
                        .WithMany("UnionList")
                        .HasForeignKey("UpazCode");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.DataModels.UpazilaInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.DataModels.DistrictInfo", "DistrictInfo")
                        .WithMany("UpazilaList")
                        .HasForeignKey("DistCode");
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.ViewModels.ViewSubCategoryInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.ViewModels.ViewCategoryInfo", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BADCIrrigationEquipmentSurvey.Models.ViewModels.ViewSubSubCategoryInfo", b =>
                {
                    b.HasOne("BADCIrrigationEquipmentSurvey.Models.ViewModels.ViewSubCategoryInfo", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
